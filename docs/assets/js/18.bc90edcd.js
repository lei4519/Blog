(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{395:function(v,t,_){"use strict";_.r(t);var e=_(11),s=Object(e.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"增强小程序原生框架"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#增强小程序原生框架"}},[v._v("#")]),v._v(" 增强小程序原生框架")]),v._v(" "),_("ul",[_("li",[v._v("增加代码复用能力\n"),_("ul",[_("li",[v._v("生命周期调整为数组，用promise.then依次执行，返回promise可以阻塞代码执行")]),v._v(" "),_("li",[v._v("增加setup函数\n"),_("ul",[_("li",[v._v("自定义hooks")])])])])]),v._v(" "),_("li",[v._v("增加全局状态管理工具")]),v._v(" "),_("li",[v._v("封装页面跳转方法，做路由拦截控制")]),v._v(" "),_("li",[v._v("注入请求方法，使用this访问")]),v._v(" "),_("li",[v._v("将"),_("code",[v._v("wx.")]),v._v("方法代理到this上，需要时进行相应装饰")])]),v._v(" "),_("h1",{attrs:{id:"小程序代码复用探索"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#小程序代码复用探索"}},[v._v("#")]),v._v(" 小程序代码复用探索")]),v._v(" "),_("p",[v._v("小程序的component已经支持了behaviors，这类似于vue的mixins，提供了代码复用的能力。")]),v._v(" "),_("p",[v._v("但是这个能力只有component可以使用，page是无法使用的。这就导致页面上的业务和通用逻辑无法复用。要知道绝大多数我们在开发时，还是page使用的比较多。所以这就是我们本篇的目的，探索一下小程序page的代码复用方法。")]),v._v(" "),_("p",[v._v("当然，这一切的前提是你正在使用的是原生小程序。如果你使用的是uniapp或taro这些框架，那你自然可以享受vue和react带来的代码复用能力。这篇文章也只是在追随先驱的脚步，拾人牙慧而已。")]),v._v(" "),_("p",[v._v("下面让我们进入正题。")]),v._v(" "),_("p",[v._v("mixins")]),v._v(" "),_("p",[v._v("作用域插槽")]),v._v(" "),_("p",[v._v("HOC")]),v._v(" "),_("p",[v._v("hooks")])])}),[],!1,null,null,null);t.default=s.exports}}]);