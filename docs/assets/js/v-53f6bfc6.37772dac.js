"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[311],{9623:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Gn});var e=a(6252),t=a(1235),l=a(3587),c=a(202);const o=(0,e._)("h1",{id:"事件循环-js是怎么运行的",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#事件循环-js是怎么运行的","aria-hidden":"true"},"#"),(0,e.Uk)(" 事件循环 - JS是怎么运行的？")],-1),u=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Uk)("Vue.nextTick怎么实现的？为什么这个API可以保证回调函数在DOM更新后被调用？ "),(0,e._)("ul",null,[(0,e._)("li",null,"抛开Vue，浏览器对DOM的更新是异步的吗？为什么Vue中的DOM更新是异步的？")])]),(0,e._)("li",null,"如果setTimeout中注册回调函数，将时间设为0，当回调函数执行时DOM更新了吗？"),(0,e._)("li",null,"Vue.nextTick和setTimeout(callback, 0)，谁先执行？")],-1),p=(0,e._)("p",null,"如果上面这个问题你都知道了，那你对事件循环的理解在日常工作中就够用了，但还是建议看一下文章，因为会讲一些原理性的知识。",-1),_=(0,e._)("h2",{id:"概述",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#概述","aria-hidden":"true"},"#"),(0,e.Uk)(" 概述")],-1),k=(0,e._)("ul",null,[(0,e._)("li",null,"JS引擎执行JS代码，是基于事件循环的。"),(0,e._)("li",null,"事件循环：单线程执行异步（非阻塞）代码的一种实现方式。"),(0,e._)("li",null,[(0,e.Uk)("JS执行线程为什么是单线程？ "),(0,e._)("ul",null,[(0,e._)("li",null,"为了防止多个JS线程同时对DOM操作起冲突，比如一个更新了DOM属性，另一个删除了DOM。"),(0,e._)("li",null,"但这并不是最根本的原因，因为别的语言中也存在多个线程同时操作共享数据的情况，解决方案是加入线程锁，来避免多线程同时对相同的数据进行操作。JS之所以选用单线程，而不是多线程 + 线程锁呢？主要是在设计之初，就没想着做出一个完备强大的语言出来，布兰登·艾克用了10天的时间开发JS这门语言，所以肯定是怎么简单怎么来。（如果他知道20年后这门语言会成为世界上最热门的语言之一，不知道开发时会不会更严谨一点）")])])],-1),i=(0,e._)("h2",{id:"浏览器进程与线程",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#浏览器进程与线程","aria-hidden":"true"},"#"),(0,e.Uk)(" 浏览器进程与线程")],-1),r=(0,e._)("p",null,"想把事件循环讲明白，就绕不过浏览器的进程和线程。",-1),b=(0,e._)("blockquote",null,[(0,e._)("p",null,"异步代码是什么？从哪里来的？")],-1),m=(0,e._)("h3",{id:"chrome的多进程架构",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#chrome的多进程架构","aria-hidden":"true"},"#"),(0,e.Uk)(" Chrome的多进程架构")],-1),U=(0,e._)("p",null,[(0,e._)("img",{src:t,alt:"IMG_9301.jpeg"})],-1),d=(0,e._)("h4",{id:"browser进程",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#browser进程","aria-hidden":"true"},"#"),(0,e.Uk)(" Browser进程")],-1),h=(0,e._)("p",null,"浏览器的主进程（负责协调、主控）",-1),g=(0,e._)("ul",null,[(0,e._)("li",null,"负责浏览器界面显示，与用户交互。如地址栏、书签栏、前进，后退等"),(0,e._)("li",null,"负责各个页面的管理，创建和销毁其他进程"),(0,e._)("li",null,"网络资源、本地存储、文件系统等")],-1),f=(0,e._)("h4",{id:"插件进程",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#插件进程","aria-hidden":"true"},"#"),(0,e.Uk)(" 插件进程")],-1),v=(0,e._)("ul",null,[(0,e._)("li",null,"每种类型的插件对应一个进程，仅当使用该插件时才创建")],-1),x=(0,e._)("h4",{id:"gpu进程-用于3d绘制等",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#gpu进程-用于3d绘制等","aria-hidden":"true"},"#"),(0,e.Uk)(" GPU进程：用于3D绘制等")],-1),j=(0,e._)("h4",{id:"renderer-进程-浏览器内核",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#renderer-进程-浏览器内核","aria-hidden":"true"},"#"),(0,e.Uk)(" Renderer 进程（浏览器内核）")],-1),T=(0,e._)("ul",null,[(0,e._)("li",null,"主要作用为页面渲染，脚本执行，事件处理等")],-1),y=(0,e._)("h3",{id:"渲染进程-浏览器内核-中的线程",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#渲染进程-浏览器内核-中的线程","aria-hidden":"true"},"#"),(0,e.Uk)(" 渲染进程（浏览器内核）中的线程")],-1),w=(0,e._)("p",null,[(0,e._)("img",{src:l,alt:"IMG_9302.png"})],-1),M=(0,e._)("h4",{id:"gui渲染线程",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#gui渲染线程","aria-hidden":"true"},"#"),(0,e.Uk)(" GUI渲染线程")],-1),S=(0,e._)("blockquote",null,[(0,e._)("p",null,"负责渲染工作")],-1),J=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("p",null,[(0,e.Uk)("渲染线程的工作流程 "),(0,e._)("img",{src:c,alt:"IMG_9303.jpeg"})])]),(0,e._)("li",null,[(0,e._)("p",null,"GUI渲染线程与JS执行线程是互斥的，一个执行的时候另一个就会被挂起。")]),(0,e._)("li",null,[(0,e._)("p",null,"常说的JS脚本加载和执行会阻塞DOM树的解析，指的就是互斥现象。"),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("p",null,"在JS执行过程中，对GUI线程的写操作，并不会被立即执行，而是被保存到一个队列中，等到JS引擎空闲时（当前宏任务执行完，下面会详细讲）被执行。"),(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e.Uk)("document"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("body"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("style"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("color "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'#000'"),(0,e.Uk)("\ndocument"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("body"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("style"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("color "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'#001'"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br")])])])])])],-1),q=(0,e._)("p",null,"document.body.style.color = '#002' ```",-1),I=(0,e._)("pre",null,[(0,e._)("code",null,"- 如果JS线程的当前宏任务执行时间过长，就会导致页面渲染不连贯，给用户的感觉就是页面卡顿。\n\n- `1000毫秒 / 60帧 = 16.6毫秒`\n")],-1),P=(0,e._)("h4",{id:"js引擎线程",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#js引擎线程","aria-hidden":"true"},"#"),(0,e.Uk)(" JS引擎线程")],-1),D=(0,e._)("blockquote",null,[(0,e._)("p",null,"负责执行Javascript代码，V8引擎指的就是这个。")],-1),O=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("p",null,"JS引擎在执行代码时，会将需要执行的代码块当成一个个任务，放入任务队列中执行，JS引擎会不停的检查并运行任务队列中任务。"),(0,e._)("div",{class:"language-vue ext-vue line-numbers-mode"},[(0,e._)("pre",{class:"language-vue"},[(0,e._)("code",null,[(0,e.Uk)("// html\n"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("script")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token script"},[(0,e._)("span",{class:"token language-javascript"},[(0,e.Uk)("\n  console"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"log"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n  console"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"log"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token number"},"2"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n  console"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"log"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token number"},"3"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])]),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("script")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n\n// 将需要执行的代码包装成一个任务\nconst task = () => {\n\tconsole.log(1)\n  console.log(2)\n  console.log(3)\n}\n\n// 放入任务队列\npushTask(task)\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br")])])]),(0,e._)("li",null,[(0,e._)("p",null,"JS引擎执行逻辑：伪代码（所有的伪代码都是为了理解写的，并不是浏览器的真实实现）："),(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"// 任务队列"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" queueTask "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"// 将任务加入任务队列"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"export"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(),(0,e._)("span",{class:"token function-variable function"},"pushTask"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token parameter"},"task"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(" queueTask"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"push"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("task"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token keyword"},"while"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token boolean"},"true"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 不停的去检查队列中是否有任务"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("queueTask"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("length"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 队列：先进先出"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" task "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" queueTask"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"shift"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token function"},"task"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br")])])])],-1),V=(0,e._)("h4",{id:"事件触发线程",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#事件触发线程","aria-hidden":"true"},"#"),(0,e.Uk)(" 事件触发线程")],-1),E=(0,e._)("blockquote",null,[(0,e._)("p",null,"事件监听触发")],-1),L=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("code",null,"document.body.addEventListener('click', () => {})")])]),(0,e._)("li",null,[(0,e._)("p",null,"伪代码："),(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"// JS线程 -> 监听事件"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"addEventListener"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("eventName"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" callback")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token function"},"sendMessage"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'eventTriggerThread'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"this"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" eventName"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" callback"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 事件触发线程 -> 监听元素对应事件"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 事件触发线程 -> 元素触发事件"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"trigger"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"callback"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token function"},"pushTask"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("callback"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br")])])])],-1),G=(0,e._)("h4",{id:"定时触发器线程",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#定时触发器线程","aria-hidden":"true"},"#"),(0,e.Uk)(" 定时触发器线程:")],-1),R=(0,e._)("blockquote",null,[(0,e._)("p",null,"定时器setInterval与setTimeout所在线程")],-1),A=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("p",null,"伪代码："),(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"// JS线程 -> 开始计时"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"setTimeout"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("callback"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" timeout")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token function"},"sendMessage"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'timerThread'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" callback"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" timeout"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n  "),(0,e._)("span",{class:"token comment"},"// 定时器线程 -> 设定定时器开始计时"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 定时器线程 -> 计时器结束"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"trigger"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"callback"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token function"},"pushTask"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("callback"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br")])])])],-1),C=(0,e._)("h4",{id:"异步http请求线程",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#异步http请求线程","aria-hidden":"true"},"#"),(0,e.Uk)(" 异步http请求线程")],-1),H=(0,e._)("blockquote",null,[(0,e._)("p",null,"Ajax、fetch请求")],-1),F=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("p",null,"伪代码："),(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"// JS线程 -> 开始请求"),(0,e.Uk)("\nXMLHttpRequest"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"send"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token function"},"sendMessage"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'netWorkThread'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" options"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" callback"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 网络线程 -> 开始请求"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 网络线程 -> 请求响应成功"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"trigger"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"callback"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token function"},"pushTask"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("callback"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br")])])])],-1),N=(0,e._)("h4",{id:"异步任务是什么-从哪来的",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#异步任务是什么-从哪来的","aria-hidden":"true"},"#"),(0,e.Uk)(" 异步任务是什么？从哪来的？")],-1),W=(0,e._)("ul",null,[(0,e._)("li",null,"异步任务就是由浏览器其他线程处理并执行的任务。"),(0,e._)("li",null,"由JS引擎调用浏览器API来通知其他线程开始工作，并将执行成功的回调函数传入，当工作结束后其他线程会将回调函数推入任务队列中，由JS引擎执行回调函数。")],-1),Z=(0,e._)("h3",{id:"示例-任务队列的运行过程",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#示例-任务队列的运行过程","aria-hidden":"true"},"#"),(0,e.Uk)(" 示例：任务队列的运行过程")],-1),z=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Uk)("从输入URL到页面渲染都发生了什么？ "),(0,e._)("ul",null,[(0,e._)("li",null,"只详细讲任务队列相关的流程")])])],-1),B=(0,e._)("ol",null,[(0,e._)("li",null,[(0,e._)("p",null,"在地址栏输入URL，请求HTML，浏览器接受到响应结果，将HTML文本交给渲染线程，渲染线程开始解析HTML文本。"),(0,e._)("div",{class:"language-html ext-html line-numbers-mode"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e.Uk)("...\n  "),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("div")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("script")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token script"},[(0,e._)("span",{class:"token language-javascript"},[(0,e.Uk)("\n    document"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("body"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("style"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("color "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'#f40'"),(0,e.Uk)("\n    document"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("body"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"addEventListener"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'click'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token function"},"setTimeout"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"100"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token function"},"ajax"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'/api/url'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n  ")])]),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("script")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("body")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br")])])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e.Uk)("渲染线程解析过程中遇到"),(0,e._)("code",null,"<script>"),(0,e.Uk)("标签时，会把"),(0,e._)("code",null,"<script>"),(0,e.Uk)("中的代码包装成一个任务，放入JS引擎中的任务队列中，并挂起当前线程，开始运行JS线程。")]),(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token function"},"pushTask"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)("script"),(0,e._)("span",{class:"token operator"},">"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br")])])]),(0,e._)("li",null,[(0,e._)("p",null,"JS线程检查到任务队列中有任务，就开始执行任务。"),(0,e._)("ol",null,[(0,e._)("li",null,"将对DOM的写操作放入队列中"),(0,e._)("li",null,"告诉事件触发线程，监听事件"),(0,e._)("li",null,"告诉定时器线程，开始计时"),(0,e._)("li",null,"告诉网络线程，开始请求")])]),(0,e._)("li",null,[(0,e._)("p",null,"第一个宏任务执行完成，执行写操作队列（渲染页面）"),(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"while"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token boolean"},"true"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("queueTask"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("length"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" task "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" queueTask"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"shift"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token function"},"task"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n    "),(0,e._)("span",{class:"token function"},"requestAnimationFrame"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 执行写操作队列后进行渲染"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token function"},"render"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 检查空闲时间是否还够"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token function"},"requestIdleCallback"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br")])])]),(0,e._)("li",null,[(0,e._)("p",null,"第一个任务就完全结束了，任务队列回到空的状态，第一个任务中注册了3个异步任务，但是这对JS引擎不会关心这些，它要做的就是接着不停的循环检查任务队列。")]),(0,e._)("li",null,[(0,e._)("p",null,"为了简化流程，假设三个异步任务同时完成了，此时任务队列中就有了3个任务"),(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"// 任务队列"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" queueTask "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("addEventListener"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" setTimeout"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" ajax"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br")])])]),(0,e._)("li",null,[(0,e._)("p",null,"但是不管有多少任务，都会按照上面的流程进行循环重复的执行，这整个流程被称为事件循环。")])],-1),X=(0,e._)("h2",{id:"微任务队列",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#微任务队列","aria-hidden":"true"},"#"),(0,e.Uk)(" 微任务队列")],-1),Y=(0,e._)("p",null,"上面说的是ES6之前的事件循环，只有一个任务队列，很好理解。",-1),$=(0,e._)("p",null,[(0,e.Uk)("在ES6标准中，ECMA要求JS引擎在事件循环中加入了一个新的队列："),(0,e._)("strong",null,"微任务队列")],-1),K=(0,e._)("ul",null,[(0,e._)("li",null,"为什么要加一个队列？要解决什么问题呢？")],-1),Q=(0,e._)("h4",{id:"宏任务队列的问题",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#宏任务队列的问题","aria-hidden":"true"},"#"),(0,e.Uk)(" 宏任务队列的问题")],-1),nn=(0,e._)("p",null,"实际功能：Vue为了性能优化，对响应式数据的修改并不会立即触发视图渲染，而是会放到一个队列中统一异步执行。（JS引擎对GUI线程写操作的思想）",-1),sn=(0,e._)("p",null,"那怎么实现这个功能呢？想要异步执行，就需要创建一个异步任务，setTimeout是最合适的。",-1),an=(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"// 响应式数据修改"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"this"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("showModal "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"true"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 记录需要重新渲染的视图"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" queue "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" flag "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"false"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"// 触发setter"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"setter"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"// 记录需要渲染的组件"),(0,e.Uk)("\nqueue"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"push"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"this"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("render"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("flag"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)("\nflag "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"true"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token function"},"setTimeout"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n queue"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"forEach"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"render"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"render"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n flag "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"false"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br")])],-1),en=(0,e._)("p",null,"这样实现有什么问题呢？",-1),tn=(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"// 任务队列"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" queueTask "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("addEventListener"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" setTimeout"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" ajax"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br")])],-1),ln=(0,e._)("p",null,[(0,e.Uk)("用上面的例子，现在任务队列里有三个任务，在第一个任务"),(0,e._)("code",null,"addEventListener"),(0,e.Uk)("中进行了Vue响应式修改。")],-1),cn=(0,e._)("p",null,"假设setTimeout立即就完成了，那么现在的任务队列如下:",-1),on=(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"// 任务队列"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" queueTask "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("addEventListener"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" setTimeout"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" ajax"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" vueRender"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br")])],-1),un=(0,e._)("p",null,"这个结果符合任务队列的运行逻辑，但却不是我们想要的。",-1),pn=(0,e._)("p",null,[(0,e.Uk)("因为视图更新的代码太靠后了，要知道每次任务执行之后并不是立即执行下一个任务，而是会执行"),(0,e._)("code",null,"requestAnimationFrame"),(0,e.Uk)("、渲染视图、检查剩余时间执行"),(0,e._)("code",null,"requestIdleCallback"),(0,e.Uk)("等等一系列的事情。")],-1),_n=(0,e._)("p",null,"按这个执行顺序，vueRender的代码会在页面渲染两次之后才执行。",-1),kn=(0,e._)("p",null,"我们想要实现的效果是这个异步代码最好是在当前任务执行完就执行，理想的任务队列是下面这样。",-1),rn=(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"// 任务队列"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" queueTask "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("addEventListener"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" vueRender"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" setTimeout"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" ajax"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br")])],-1),bn=(0,e._)("p",null,"相当于要给宏任务队列加入插入队列的功能，但是如果这么改，那就整个乱套了。之前的异步任务还有个先来后到的顺序，先加入先执行，这么一改，异步任务的顺序就完全无法控制了。",-1),mn=(0,e._)("p",null,"上面的问题总结来说",-1),Un=(0,e._)("ol",null,[(0,e._)("li",null,"现在的异步任务，执行颗粒度太大，两个任务间要做的事情太多，我们想要能够创建更快更高效的异步任务。"),(0,e._)("li",null,"现在的任务队列逻辑不能动。"),(0,e._)("li",null,[(0,e.Uk)("JS引擎本身没有创建异步任务的能力。 "),(0,e._)("ul",null,[(0,e._)("li",null,"在这个例子中，需要执行的异步任务，跟别的线程是没有任何关系的，我们只是想通过异步任务来优化性能。")])])],-1),dn=(0,e._)("h4",{id:"解决方案",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#解决方案","aria-hidden":"true"},"#"),(0,e.Uk)(" 解决方案")],-1),hn=(0,e._)("p",null,[(0,e.Uk)("既然之前的任务队列逻辑不能动，那不如就加个新队列："),(0,e._)("strong",null,"微任务队列"),(0,e.Uk)("。")],-1),gn=(0,e._)("p",null,"JS引擎自己创建的异步任务，就往这个微任务队列里放。通过别的线程创建的异步任务，还是按老样子放入之前的队列中（宏任务队列）。",-1),fn=(0,e._)("p",null,"微任务队列，会在宏任务执行之后被清空执行。",-1),vn=(0,e._)("p",null,"加入了微任务队列之后，JS引擎的代码实现：",-1),xn=(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"// 宏任务队列"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" macroTask "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"// 微任务队列"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" microTask "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token keyword"},"while"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token boolean"},"true"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("macroTask"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("length"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" task "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" macroTask"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"shift"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token function"},"task"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n    "),(0,e._)("span",{class:"token comment"},"// 宏任务执行之后，清空微任务队列"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"while"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("microTask"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("length"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" micro "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" microTask"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"shift"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token function"},"micro"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n    "),(0,e._)("span",{class:"token function"},"requestAnimationFrame"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token function"},"render"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token function"},"requestIdleCallback"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br")])],-1),jn=(0,e._)("p",null,[(0,e._)("strong",null,"注意while循环的实现，只要微任务队列中有任务，就会一直执行直到队列为空。也就是说如果在微任务执行过程中又产生了微任务（向微任务队列中push了新值），这个新的微任务也会在这个while循环中被执行")],-1),Tn=(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"// 微任务队列 = []"),(0,e.Uk)("\n\nPromise"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"resolve"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"then"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  \tconsole"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"log"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n  \tPromise"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"resolve"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"then"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        console"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"log"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token number"},"2"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"// 微任务队列 = [log1函数体]"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// log1函数体 = 微任务队列.shift()"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"// 微任务队列 = []"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// log1函数体()"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"// 微任务队列 = [log2函数体]"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// log2函数体 = 微任务队列.shift()"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"// 微任务队列 = []"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 渲染视图"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br")])],-1),yn=(0,e._)("p",null,"以上就是为什么要有微任务队列，以及微任务队列的运行逻辑。",-1),wn=(0,e._)("p",null,[(0,e.Uk)("浏览器中可以产生微任务异步代码的API："),(0,e._)("code",null,"Promise.prototype.then"),(0,e.Uk)("、"),(0,e._)("code",null,"MutationObserver"),(0,e.Uk)("、"),(0,e._)("code",null,"setImmediate(IE、nodejs)"),(0,e.Uk)("、"),(0,e._)("code",null,"MessagePort.onmessage")],-1),Mn=(0,e._)("p",null,"Vue渲染视图的异步代码就是放在微任务队列中的。",-1),Sn=(0,e._)("blockquote",null,[(0,e._)("p",null,"Vue2的nextTick实现为：Promise -> setImmediate -> MessagePort.onmessage -> setTimeout")],-1),Jn=(0,e._)("h2",{id:"vue-nexttick",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#vue-nexttick","aria-hidden":"true"},"#"),(0,e.Uk)(" Vue.nextTick")],-1),qn=(0,e._)("blockquote",null,[(0,e._)("p",null,"API介绍：使用nextTick注册的代码会在 DOM 更新之后被调用。")],-1),In=(0,e._)("p",null,"nextTick的实现比我们想的要简单的多，尤其是我们已经了解了微任务的执行逻辑。",-1),Pn=(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"// 记录需要重新渲染的视图"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" queue "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" flag "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"false"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"// 触发setter"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"setter"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 记录需要渲染的组件"),(0,e.Uk)("\n  queue"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"push"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"this"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("render"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("flag"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)("\n  flag "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"true"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// setTimeout 换成了 Promise, 将异步任务注册进微任务队列中"),(0,e.Uk)("\n  Promise"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"resolve"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"then"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    queue"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"forEach"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"render"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"render"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    flag "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"false"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 微任务队列：[]"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token keyword"},"this"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("showModal "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"true"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"// 微任务队列：[vueRender]"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token keyword"},"this"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"$nextTick"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"// 微任务队列：[vueRender, nextTickCallback]"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br")])],-1),Dn=(0,e._)("p",null,"Vue3的nextTick（支持Proxy的浏览器不可能不支持Promise）",-1),On=(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" resolvedPromise "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" Promise"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"resolve"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"export"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"nextTick"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"fn"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" fn "),(0,e._)("span",{class:"token operator"},"?"),(0,e.Uk)(" resolvedPromise"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"then"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("fn"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(" p\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br")])],-1),Vn=(0,e._)("h2",{id:"问题答案",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#问题答案","aria-hidden":"true"},"#"),(0,e.Uk)(" 问题答案")],-1),En=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Uk)("Vue.nextTick怎么实现的？为什么这个API可以保证回调函数在DOM更新后被调用？ "),(0,e._)("ul",null,[(0,e._)("li",null,"DOM操作时同步的，nextTick注册的回调函数在vueRender函数之后，所以此时DOM已经更新了。")])]),(0,e._)("li",null,[(0,e.Uk)("如果setTimeout中注册回调函数，将时间设为0，当回调函数执行时DOM更新了吗？ "),(0,e._)("ul",null,[(0,e._)("li",null,"肯定更新了，setTimeout注册的是宏任务，宏任务执行时微任务肯定早就执行完了")])]),(0,e._)("li",null,[(0,e.Uk)("Vue.nextTick和setTimeout(callback, 0)，谁先执行？ "),(0,e._)("ul",null,[(0,e._)("li",null,"Vue.nextTick，这是个微任务。")])])],-1),Ln={},Gn=(0,a(3744).Z)(Ln,[["render",function(n,s){return(0,e.wg)(),(0,e.iD)(e.HY,null,[o,u,p,_,k,i,r,b,m,U,d,h,g,f,v,x,j,T,y,w,M,S,J,q,I,P,D,O,V,E,L,G,R,A,C,H,F,N,W,Z,z,B,X,Y,$,K,Q,nn,sn,an,en,tn,ln,cn,on,un,pn,_n,kn,rn,bn,mn,Un,dn,hn,gn,fn,vn,xn,jn,Tn,yn,wn,Mn,Sn,Jn,qn,In,Pn,Dn,On,Vn,En],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}},6810:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-53f6bfc6",path:"/technology/Web/event-loop.html",title:"事件循环 - JS是怎么运行的？",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"概述",slug:"概述",children:[]},{level:2,title:"浏览器进程与线程",slug:"浏览器进程与线程",children:[{level:3,title:"Chrome的多进程架构",slug:"chrome的多进程架构",children:[]},{level:3,title:"渲染进程（浏览器内核）中的线程",slug:"渲染进程-浏览器内核-中的线程",children:[]},{level:3,title:"示例：任务队列的运行过程",slug:"示例-任务队列的运行过程",children:[]}]},{level:2,title:"微任务队列",slug:"微任务队列",children:[]},{level:2,title:"Vue.nextTick",slug:"vue-nexttick",children:[]},{level:2,title:"问题答案",slug:"问题答案",children:[]}],filePathRelative:"technology/Web/event-loop.md",git:{updatedTime:1601633023e3}}},1235:(n,s,a)=>{n.exports=a.p+"assets/img/IMG_9299.bd39d847.jpg"},3587:(n,s,a)=>{n.exports=a.p+"assets/img/IMG_9302.1b191405.png"},202:(n,s,a)=>{n.exports=a.p+"assets/img/IMG_9303.41e954fa.jpg"}}]);