"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[748],{5427:(s,n,a)=>{a.r(n),a.d(n,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h1><h2 id="mysql常用命令" tabindex="-1"><a class="header-anchor" href="#mysql常用命令" aria-hidden="true">#</a> MySQL常用命令</h2><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 查看当前所有的数据库</span>\n<span class="token keyword">show</span> <span class="token keyword">databases</span>\n<span class="token comment"># 打开指定的库</span>\n<span class="token keyword">use</span> 表名\n<span class="token comment"># 显示库的结构</span>\n<span class="token keyword">desc</span> 表名\n<span class="token comment"># 显示当前库的所有表</span>\n<span class="token keyword">show</span> <span class="token keyword">tables</span>\n<span class="token comment"># 显示其他库的所有表</span>\n<span class="token keyword">show</span> <span class="token keyword">tables</span> form 库名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="查询类" tabindex="-1"><a class="header-anchor" href="#查询类" aria-hidden="true">#</a> 查询类</h2><h3 id="基础查询" tabindex="-1"><a class="header-anchor" href="#基础查询" aria-hidden="true">#</a> 基础查询</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> 查询列表 <span class="token keyword">from</span> 表名\n<span class="token comment"># 查询列表：表中的字段，常量，表达式，函数</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="别名两种方式" tabindex="-1"><a class="header-anchor" href="#别名两种方式" aria-hidden="true">#</a> 别名两种方式</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> 字段 <span class="token keyword">as</span> 别名\n<span class="token keyword">select</span> 字段 别名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="去重-distinct" tabindex="-1"><a class="header-anchor" href="#去重-distinct" aria-hidden="true">#</a> 去重 distinct</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">distinct</span> 字段 <span class="token keyword">from</span> 表名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符" aria-hidden="true">#</a> + 运算符</h4><ul><li>都为数值则相加</li><li>为字符串则转换为数值想加，转换失败则为0</li><li>为null，则结果为null</li></ul><h4 id="concat-字符拼接" tabindex="-1"><a class="header-anchor" href="#concat-字符拼接" aria-hidden="true">#</a> concat 字符拼接</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> concat（字段<span class="token number">1</span>，字段<span class="token number">2</span>…）\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="条件查询" tabindex="-1"><a class="header-anchor" href="#条件查询" aria-hidden="true">#</a> 条件查询</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> 查询列表 <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 条件\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="条件运算符" tabindex="-1"><a class="header-anchor" href="#条件运算符" aria-hidden="true">#</a> 条件运算符</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># &lt;&gt; 不等于</span>\n<span class="token comment"># &lt;=&gt; 安全等于，可以判断null</span>\n<span class="token operator">=</span>，<span class="token operator">!=</span>，<span class="token operator">&gt;</span>，<span class="token operator">&lt;</span>，≥，≤，<span class="token operator">&lt;&gt;</span>，<span class="token operator">&lt;=&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a> 逻辑运算符</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token operator">and</span>，<span class="token operator">or</span>，<span class="token operator">not</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="模糊查询" tabindex="-1"><a class="header-anchor" href="#模糊查询" aria-hidden="true">#</a> 模糊查询</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token operator">like</span>，<span class="token operator">in</span>，<span class="token operator">between</span> <span class="token operator">and</span>，<span class="token operator">is</span> <span class="token boolean">null</span>\n<span class="token comment"># % 通配符：任意多个字符，包含0个</span>\n<span class="token comment"># _ 通配符：任意单个字符</span>\n<span class="token comment"># \\ 转义字符</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="排序查询" tabindex="-1"><a class="header-anchor" href="#排序查询" aria-hidden="true">#</a> 排序查询</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">order</span> <span class="token keyword">by</span> 排序字段 <span class="token keyword">asc</span> <span class="token operator">|</span> <span class="token keyword">desc</span>，排序字段 <span class="token keyword">asc</span> <span class="token operator">|</span> <span class="token keyword">desc</span>…\n<span class="token comment"># asc升序 desc降序</span>\n<span class="token comment"># 默认升序</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="常见函数" tabindex="-1"><a class="header-anchor" href="#常见函数" aria-hidden="true">#</a> 常见函数</h3><h4 id="字符函数" tabindex="-1"><a class="header-anchor" href="#字符函数" aria-hidden="true">#</a> 字符函数</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>lower，upper\nconcat\nsubstr（字符串，起始索引<span class="token number">1</span>开始计数，长度）\nlength\ninstr\nlpad，rpad\ntrim\n<span class="token keyword">replace</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="数学函数" tabindex="-1"><a class="header-anchor" href="#数学函数" aria-hidden="true">#</a> 数学函数</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>round\nceil\nfloor\nmod\n<span class="token keyword">truncate</span> 截断指定小数位\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="日期函数" tabindex="-1"><a class="header-anchor" href="#日期函数" aria-hidden="true">#</a> 日期函数</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>now 日期时间\ncurdate 日期\ncurtime 时间\n<span class="token keyword">year</span>，<span class="token keyword">month</span>，<span class="token keyword">day</span>\nstr_to_date\ndate_format\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="流程控制" tabindex="-1"><a class="header-anchor" href="#流程控制" aria-hidden="true">#</a> 流程控制</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">if</span>（条件，<span class="token boolean">true</span>，<span class="token boolean">false</span>）\n<span class="token keyword">case</span> 条件\n<span class="token keyword">when</span> 常量 <span class="token keyword">then</span> 语句\n<span class="token keyword">else</span> 默认值\n<span class="token keyword">end</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="单行函数" tabindex="-1"><a class="header-anchor" href="#单行函数" aria-hidden="true">#</a> 单行函数</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>concat，length，ifnull\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="多表连接查询" tabindex="-1"><a class="header-anchor" href="#多表连接查询" aria-hidden="true">#</a> 多表连接查询</h3><blockquote><p>要查询的字段涉及到多个表时</p></blockquote><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> 查询列表\n<span class="token keyword">from</span> 表<span class="token number">1</span> 连接类型\n<span class="token keyword">join</span> 表<span class="token number">2</span>\n<span class="token keyword">on</span> 连接条件\n<span class="token keyword">where</span> 筛选条件\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="笛卡尔乘积" tabindex="-1"><a class="header-anchor" href="#笛卡尔乘积" aria-hidden="true">#</a> 笛卡尔乘积</h4><p>n × m 表1中的每一行对表2进行匹配 原因：没有有效的连接条件</p><h4 id="内连接-inner" tabindex="-1"><a class="header-anchor" href="#内连接-inner" aria-hidden="true">#</a> 内连接 inner</h4><p>查询交集的部分</p><ul><li>等值连接 =</li><li>非等值连接</li><li>自连接 <ul><li>给同一个表起不同的别名，使用别名进行字段区分</li></ul></li></ul><h4 id="左外连接-右外连接-left-right" tabindex="-1"><a class="header-anchor" href="#左外连接-右外连接-left-right" aria-hidden="true">#</a> 左外连接/右外连接 left/right</h4><ul><li>左连左边的是主表，反之亦然</li><li>显示所有主表字段，次表没有显示null</li></ul><h4 id="全外连接-full" tabindex="-1"><a class="header-anchor" href="#全外连接-full" aria-hidden="true">#</a> 全外连接 full</h4><h4 id="交叉连接-cross" tabindex="-1"><a class="header-anchor" href="#交叉连接-cross" aria-hidden="true">#</a> 交叉连接 cross</h4><p>笛卡尔乘积</p><h3 id="子查询" tabindex="-1"><a class="header-anchor" href="#子查询" aria-hidden="true">#</a> 子查询</h3><p>出现在其他语句中的select语句</p><ol><li>子查询放在小括号中</li><li>子查询放在条件的右侧</li></ol><h4 id="where-having-后面" tabindex="-1"><a class="header-anchor" href="#where-having-后面" aria-hidden="true">#</a> where having 后面</h4><h5 id="标量子查询-单行子查询" tabindex="-1"><a class="header-anchor" href="#标量子查询-单行子查询" aria-hidden="true">#</a> 标量子查询（单行子查询）</h5><ul><li>一般搭配单行操作符</li><li>大于/等于/小于/不等</li></ul><h5 id="列子查询-多行子查询" tabindex="-1"><a class="header-anchor" href="#列子查询-多行子查询" aria-hidden="true">#</a> 列子查询（多行子查询）</h5><ul><li>一般搭配多行操作符</li><li>IN / NOT IN：（不）包含在列表中</li><li>ANY / SOME：与某一个值比较</li><li>ALL：与所有值比较</li></ul><h5 id="行子查询-多列多行" tabindex="-1"><a class="header-anchor" href="#行子查询-多列多行" aria-hidden="true">#</a> 行子查询（多列多行）</h5><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 表\n<span class="token keyword">WHERE</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">(</span> <span class="token keyword">SELECT</span> A<span class="token punctuation">,</span> B <span class="token keyword">FROM</span> 表 <span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="select-后面" tabindex="-1"><a class="header-anchor" href="#select-后面" aria-hidden="true">#</a> select 后面</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> d<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> 表<span class="token number">2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="from后面" tabindex="-1"><a class="header-anchor" href="#from后面" aria-hidden="true">#</a> from后面</h4><p>将查询的结果集作为外面语句的数据源</p><h4 id="exists后面-相关子查询" tabindex="-1"><a class="header-anchor" href="#exists后面-相关子查询" aria-hidden="true">#</a> exists后面（相关子查询）</h4><ul><li>exists(查询语句)：返回查询结果是否有值，布尔</li></ul><h3 id="分页查询" tabindex="-1"><a class="header-anchor" href="#分页查询" aria-hidden="true">#</a> 分页查询</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">LIMIT</span> <span class="token keyword">offset</span><span class="token punctuation">,</span> size\n<span class="token comment"># offset 偏移量</span>\n<span class="token comment"># size 数量</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="联合查询" tabindex="-1"><a class="header-anchor" href="#联合查询" aria-hidden="true">#</a> 联合查询</h3><p>将多条查询语句合并成一个结果，查询多个表并且表之间没有联合关系时使用。</p><ul><li>查询的列数必须一致</li><li>尽可能保证多条查询语句的每一列类型和顺序一致</li><li>默认自动去重，使用UNION ALL查询全部</li></ul><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>查询语句<span class="token number">1</span> <span class="token keyword">UNION</span> 查询语句<span class="token number">2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="dml语言" tabindex="-1"><a class="header-anchor" href="#dml语言" aria-hidden="true">#</a> DML语言</h2><h3 id="insert" tabindex="-1"><a class="header-anchor" href="#insert" aria-hidden="true">#</a> insert</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> 表名<span class="token punctuation">(</span>列<span class="token number">1</span>，列<span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>值<span class="token number">1</span>，值<span class="token number">2</span><span class="token punctuation">)</span>，<span class="token keyword">values</span><span class="token punctuation">(</span>值<span class="token number">1</span>，值<span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token comment"># 支持插入多行</span>\n<span class="token comment"># 支持子查询</span>\n\n<span class="token keyword">insert</span> <span class="token keyword">into</span> 表名 <span class="token keyword">set</span> 列<span class="token operator">=</span>值<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token comment"># 插入值的类型要和列的类型保持一致或兼容</span>\n<span class="token comment"># 不能为null的列，不能为空</span>\n<span class="token comment"># 列的顺序可以调换</span>\n<span class="token comment"># 列的个数和值一致</span>\n<span class="token comment"># 可以没有列名，此时值的顺序和个数与表保持一致</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="update" tabindex="-1"><a class="header-anchor" href="#update" aria-hidden="true">#</a> update</h3><h4 id="单表" tabindex="-1"><a class="header-anchor" href="#单表" aria-hidden="true">#</a> 单表</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">update</span> 表名 <span class="token keyword">set</span> 列<span class="token operator">=</span>值 <span class="token keyword">where</span> 筛选条件\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="多表" tabindex="-1"><a class="header-anchor" href="#多表" aria-hidden="true">#</a> 多表</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">update</span> 表<span class="token number">1</span> <span class="token keyword">inner</span><span class="token operator">/</span><span class="token keyword">left</span><span class="token operator">/</span><span class="token keyword">right</span> <span class="token keyword">join</span> 表<span class="token number">2</span>\n<span class="token keyword">on</span> 连接条件\n<span class="token keyword">set</span> 列<span class="token operator">=</span>值\n<span class="token keyword">where</span> 筛选条件\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="delete" tabindex="-1"><a class="header-anchor" href="#delete" aria-hidden="true">#</a> delete</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">delete</span> form 表名 <span class="token keyword">where</span> 筛选条件\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="全部删除" tabindex="-1"><a class="header-anchor" href="#全部删除" aria-hidden="true">#</a> 全部删除</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">truncate</span> <span class="token keyword">table</span> 表名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="ddl" tabindex="-1"><a class="header-anchor" href="#ddl" aria-hidden="true">#</a> DDL</h2><p>库和表的管理</p><h3 id="库的管理" tabindex="-1"><a class="header-anchor" href="#库的管理" aria-hidden="true">#</a> 库的管理</h3><h4 id="create" tabindex="-1"><a class="header-anchor" href="#create" aria-hidden="true">#</a> create</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">database</span> 库名\n<span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> 库名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="alter" tabindex="-1"><a class="header-anchor" href="#alter" aria-hidden="true">#</a> alter</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">rename</span> <span class="token keyword">database</span> 旧库名 <span class="token keyword">to</span> 新库名\n<span class="token keyword">alter</span> <span class="token keyword">database</span> 库名 <span class="token keyword">character</span> <span class="token keyword">set</span> 新字符集\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="drop" tabindex="-1"><a class="header-anchor" href="#drop" aria-hidden="true">#</a> drop</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">database</span> 库名\n<span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> 库名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="表的管理" tabindex="-1"><a class="header-anchor" href="#表的管理" aria-hidden="true">#</a> 表的管理</h3><h4 id="create-1" tabindex="-1"><a class="header-anchor" href="#create-1" aria-hidden="true">#</a> create</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> 表名 （\n  列名 列类型 约束\n）\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="alter-1" tabindex="-1"><a class="header-anchor" href="#alter-1" aria-hidden="true">#</a> alter</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 修改列名</span>\n<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 change cloumn 旧列名 新列名 类型\n<span class="token comment"># 修改类型或约束</span>\n<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">modify</span> cloumn 列名 类型\n<span class="token comment"># 添加新列</span>\n<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名<span class="token keyword">add</span> cloumn 列名 类型\n<span class="token comment"># 删除列</span>\n<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名<span class="token keyword">drop</span> cloumn 列名\n<span class="token comment"># 修改表名</span>\n<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">rename</span> <span class="token keyword">to</span> 新表名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="drop-1" tabindex="-1"><a class="header-anchor" href="#drop-1" aria-hidden="true">#</a> drop</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">table</span> 表名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="表的复制" tabindex="-1"><a class="header-anchor" href="#表的复制" aria-hidden="true">#</a> 表的复制</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 复制表的结构</span>\n<span class="token keyword">create</span> <span class="token keyword">table</span> 新表名 <span class="token operator">like</span> 表名\n<span class="token comment"># 复制结构 + 内容</span>\n<span class="token keyword">create</span> <span class="token keyword">table</span> 新表名 查询语句\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><h3 id="数值型" tabindex="-1"><a class="header-anchor" href="#数值型" aria-hidden="true">#</a> 数值型</h3><h4 id="整型" tabindex="-1"><a class="header-anchor" href="#整型" aria-hidden="true">#</a> 整型</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">tinyint</span> <span class="token comment"># 1字节 -128～127 0-255</span>\n<span class="token keyword">smallint</span> <span class="token comment"># 2字节</span>\n<span class="token keyword">mediumint</span> <span class="token comment"># 3字节</span>\n<span class="token keyword">int</span> <span class="token comment"># 4字节</span>\n<span class="token keyword">bigint</span> <span class="token comment"># 8字节</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>默认有符号，设置无符号 unsigned，</li><li>设置zerofill，默认无符号，长度不足补零</li><li>超出范围插入临界值</li></ul><h4 id="小数" tabindex="-1"><a class="header-anchor" href="#小数" aria-hidden="true">#</a> 小数</h4><blockquote><p>所选择的类型越简单越好，保存数值的类型越小越好（节省空间）</p></blockquote><ul><li>M：指定 整数 + 小数 的总位数，默认10</li><li>D：指定小数位数，默认0</li></ul><h5 id="浮点数" tabindex="-1"><a class="header-anchor" href="#浮点数" aria-hidden="true">#</a> 浮点数</h5><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">float</span><span class="token punctuation">(</span>M<span class="token punctuation">,</span> D<span class="token punctuation">)</span> <span class="token comment"># 4字节</span>\n<span class="token keyword">double</span><span class="token punctuation">(</span>M<span class="token punctuation">,</span> D<span class="token punctuation">)</span> <span class="token comment"># 8字节</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>随着插入数值的精度来决定</li></ul><h5 id="定点数" tabindex="-1"><a class="header-anchor" href="#定点数" aria-hidden="true">#</a> 定点数</h5><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 可简写为 DEC(M, D)</span>\n<span class="token keyword">DECIMAL</span><span class="token punctuation">(</span>M<span class="token punctuation">,</span> D<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>相较浮点数更加精确</li></ul><h3 id="字符型" tabindex="-1"><a class="header-anchor" href="#字符型" aria-hidden="true">#</a> 字符型</h3><h4 id="短文本" tabindex="-1"><a class="header-anchor" href="#短文本" aria-hidden="true">#</a> 短文本</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># M 字符数</span>\n\n<span class="token comment"># 固定长度，默认为1</span>\n<span class="token keyword">char</span><span class="token punctuation">(</span>M<span class="token punctuation">)</span>\n\n<span class="token comment"># 可变长度，不可为空</span>\n<span class="token keyword">varchar</span><span class="token punctuation">(</span>M<span class="token punctuation">)</span>\n\n<span class="token comment"># 假设字符数为10，不管内容有几个字符，char都会开辟10个空间。varchar则会根据内容长度开辟。</span>\n<span class="token comment"># 由于varchar计算长度，所以性能相比char会较慢</span>\n\n<span class="token comment"># 保存较短的二进制</span>\n<span class="token keyword">binary</span>\n<span class="token keyword">varbinary</span>\n\n<span class="token comment"># 枚举，只能插入指定的值，不区分大小写</span>\n<span class="token keyword">ENUM</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>\n\n<span class="token comment"># 集合，可以存储0～64个成员，和enum的区别在于插入时可以同时插入多个</span>\n<span class="token keyword">set</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="长文本" tabindex="-1"><a class="header-anchor" href="#长文本" aria-hidden="true">#</a> 长文本</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">text</span>\n<span class="token comment"># 保存较长的二进制</span>\n<span class="token keyword">blob</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="日期型" tabindex="-1"><a class="header-anchor" href="#日期型" aria-hidden="true">#</a> 日期型</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">date</span>\n<span class="token keyword">time</span>\n<span class="token keyword">year</span>\n\n<span class="token keyword">datetime</span> <span class="token comment"># 8字节 1000～9999 不受时区影响</span>\n<span class="token keyword">timestamp</span> <span class="token comment"># 4字节 1970～2038 受时区影响</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="常见约束" tabindex="-1"><a class="header-anchor" href="#常见约束" aria-hidden="true">#</a> 常见约束</h2><p>限制表中的数据，为了保证表中数据的准确和可靠性</p><h3 id="六大约束" tabindex="-1"><a class="header-anchor" href="#六大约束" aria-hidden="true">#</a> 六大约束</h3><h4 id="not-null" tabindex="-1"><a class="header-anchor" href="#not-null" aria-hidden="true">#</a> NOT NULL</h4><p>非空，保证该字段的值不能为空</p><h4 id="default" tabindex="-1"><a class="header-anchor" href="#default" aria-hidden="true">#</a> DEFAULT</h4><p>默认，保证该字段有默认值</p><h4 id="primary-key" tabindex="-1"><a class="header-anchor" href="#primary-key" aria-hidden="true">#</a> PRIMARY KEY</h4><p>主键，保证字段的唯一且不为空</p><h4 id="unique" tabindex="-1"><a class="header-anchor" href="#unique" aria-hidden="true">#</a> UNIQUE</h4><p>唯一，保证字段的唯一性</p><h4 id="check-mysql不支持" tabindex="-1"><a class="header-anchor" href="#check-mysql不支持" aria-hidden="true">#</a> CHECK（MySQL不支持）</h4><p>检查，如年龄范围的限制</p><h4 id="foreign-key" tabindex="-1"><a class="header-anchor" href="#foreign-key" aria-hidden="true">#</a> FOREIGN KEY</h4><p>外键，限制两个表的关系，保证该字段的值必须来自于主表的关联列的值</p><h5 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h5><ul><li>在从表设置外键关闭</li><li>从表的外键列和主表的关联列数据类型要保持一致或兼容</li><li>主表的关联列必须是一个key（主键或唯一）</li><li>插入数据时，先插入主表，再插入从表</li><li>删除数据时，先删除从表，再删除主表</li></ul><h5 id="添加时机" tabindex="-1"><a class="header-anchor" href="#添加时机" aria-hidden="true">#</a> 添加时机</h5><ul><li>创建</li><li>修改</li></ul><h5 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h5><ul><li>列级 <ul><li>六大约束都可以写，但外键约束没有效果</li></ul></li><li>表级 <ul><li>除了非空和默认，其他都支持</li></ul></li></ul><h3 id="主键和唯一的区别" tabindex="-1"><a class="header-anchor" href="#主键和唯一的区别" aria-hidden="true">#</a> 主键和唯一的区别</h3><table><thead><tr><th></th><th>唯一性</th><th>为空</th><th>允许多个</th><th>允许组合</th></tr></thead><tbody><tr><td>主键</td><td>✅</td><td>❌</td><td>至少有1个</td><td>✅，但不推荐</td></tr><tr><td>唯一</td><td>✅</td><td>✅</td><td>可以有多个</td><td>✅，但不推荐</td></tr></tbody></table><h3 id="创建表时添加约束" tabindex="-1"><a class="header-anchor" href="#创建表时添加约束" aria-hidden="true">#</a> 创建表时添加约束</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 列级约束</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> info {\n  a <span class="token keyword">int</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>\n  b <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  c <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">CHECK</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token string">&#39;男&#39;</span> <span class="token operator">OR</span> c<span class="token operator">=</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  d <span class="token keyword">int</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">,</span>\n  e <span class="token keyword">int</span> <span class="token keyword">DEFAULT</span><span class="token punctuation">,</span>\n  f <span class="token keyword">int</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token keyword">REFERENCES</span> m<span class="token punctuation">(</span>id<span class="token punctuation">)</span>\n}\n\n<span class="token comment"># 表级约束</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> info {\n  a <span class="token keyword">int</span><span class="token punctuation">,</span>\n  b <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  c <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  d <span class="token keyword">int</span><span class="token punctuation">,</span>\n  e <span class="token keyword">int</span><span class="token punctuation">,</span>\n  f <span class="token keyword">int</span>，\n\n  <span class="token keyword">CONSTRAINT</span> pk <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">CONSTRAINT</span> uq <span class="token keyword">UNIQUE</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">CONSTRAINT</span> ck <span class="token keyword">CHECK</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token string">&#39;男&#39;</span> <span class="token operator">OR</span> c<span class="token operator">=</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">CONSTRAINT</span> fk <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> m<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span>\n}\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="修改表时添加约束" tabindex="-1"><a class="header-anchor" href="#修改表时添加约束" aria-hidden="true">#</a> 修改表时添加约束</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 列级约束</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> 列名 类型 约束\n\n<span class="token comment"># 表级约束</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="修改表时删除约束" tabindex="-1"><a class="header-anchor" href="#修改表时删除约束" aria-hidden="true">#</a> 修改表时删除约束</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 删除主键</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span>\n\n<span class="token comment"># 删除唯一</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> 列名\n\n<span class="token comment"># 删除外键</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> 列名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="标识列" tabindex="-1"><a class="header-anchor" href="#标识列" aria-hidden="true">#</a> 标识列</h2><p>自增列，默认从1自增</p><ul><li>一个表中只能有一个标识列</li><li>标识列的类型只能是数值型</li></ul><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> info {\n  a <span class="token keyword">int</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span>\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="事务" tabindex="-1"><a class="header-anchor" href="#事务" aria-hidden="true">#</a> 事务</h2><p>一个或一组sql语句组成一个执行单元，这个执行单元要么全部执行，要么全部不执行。</p><h3 id="事务的acid属性" tabindex="-1"><a class="header-anchor" href="#事务的acid属性" aria-hidden="true">#</a> 事务的ACID属性</h3><ul><li>Atomicity <ul><li>原子性是指事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生</li></ul></li><li>Consistency <ul><li>事务必须使数据库从一个一致性状态变换到另一个一致性状态</li></ul></li><li>Isolation <ul><li>一个事务的执行不能被其他事务干扰</li></ul></li><li>Durability <ul><li>事务一旦被提交，它对数据库中的改变就是永久性的</li></ul></li></ul><h3 id="事务的创建" tabindex="-1"><a class="header-anchor" href="#事务的创建" aria-hidden="true">#</a> 事务的创建</h3><h4 id="隐式事务" tabindex="-1"><a class="header-anchor" href="#隐式事务" aria-hidden="true">#</a> 隐式事务</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">insert</span>\n<span class="token keyword">update</span>\n<span class="token keyword">delete</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="显式事务" tabindex="-1"><a class="header-anchor" href="#显式事务" aria-hidden="true">#</a> 显式事务</h4><p>前提：必须先禁用自动提交的功能</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 开启事务</span>\n<span class="token keyword">set</span> autocommit<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token keyword">start</span> <span class="token keyword">transaction</span><span class="token punctuation">;</span>\n\n<span class="token comment"># 编写事务中的sql语句</span>\n<span class="token keyword">select</span>、<span class="token keyword">insert</span>、<span class="token keyword">update</span>、<span class="token keyword">delete</span>\n\n<span class="token comment"># 结束事务</span>\n<span class="token keyword">commit</span>； <span class="token comment"># 提交事务</span>\n<span class="token comment"># OR</span>\n<span class="token keyword">rollback</span><span class="token punctuation">;</span> <span class="token comment"># 回滚事务</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>DELETE 支持回滚操作</li><li>TRUNCATE 不支持回滚操作</li></ul><h3 id="隔离级别" tabindex="-1"><a class="header-anchor" href="#隔离级别" aria-hidden="true">#</a> 隔离级别</h3><p>同时运行的多个事务，当这些事务访问数据库中的相同的数据时，如果没有采取必要的隔离机制，就会导致各种并发问题：</p><ul><li>脏读：T1读取了T2<em>更新但还没提交</em>的数据后，若T2回滚，T1读取的内容就是无效的</li><li>不可重复读：T1读取了一个字段，T2更新该字段后，T1再次读取，值就不同了</li><li>幻读：T1读取了字段后，T2执行了插入动作后，T1再次读取就会多出几行</li></ul><table><thead><tr><th></th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>read uncommitted</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>read committed</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td>repeatable read</td><td>❌</td><td>❌</td><td>✅</td></tr><tr><td>serializable</td><td>❌</td><td>❌</td><td>❌</td></tr></tbody></table><ul><li>MySQL 中默认 repeatable read</li><li>Oracle 中默认 read committed</li></ul><h4 id="查看隔离级别" tabindex="-1"><a class="header-anchor" href="#查看隔离级别" aria-hidden="true">#</a> 查看隔离级别</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> @<span class="token variable">@tx_isolation</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="设置当前mysql连接的隔离级别" tabindex="-1"><a class="header-anchor" href="#设置当前mysql连接的隔离级别" aria-hidden="true">#</a> 设置当前MySQL连接的隔离级别</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">set</span> <span class="token keyword">transaction</span> <span class="token keyword">isolation</span> <span class="token keyword">level</span> <span class="token keyword">read</span> <span class="token keyword">committed</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="设置数据库系统全局的隔离级别" tabindex="-1"><a class="header-anchor" href="#设置数据库系统全局的隔离级别" aria-hidden="true">#</a> 设置数据库系统全局的隔离级别</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">set</span> <span class="token keyword">global</span> <span class="token keyword">transaction</span> <span class="token keyword">isolation</span> <span class="token keyword">level</span> <span class="token keyword">read</span> <span class="token keyword">committed</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="回滚点" tabindex="-1"><a class="header-anchor" href="#回滚点" aria-hidden="true">#</a> 回滚点</h3><p>搭配 rollback 使用，回滚至某个标记点</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">set</span> autocommit<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token keyword">start</span> <span class="token keyword">transaction</span><span class="token punctuation">;</span>\n\n<span class="token keyword">select</span>、<span class="token keyword">insert</span>、<span class="token keyword">update</span>、<span class="token keyword">delete</span>\n<span class="token keyword">savepoint</span> a<span class="token punctuation">;</span> <span class="token comment"># 设置节点</span>\n<span class="token keyword">select</span>、<span class="token keyword">insert</span>、<span class="token keyword">update</span>、<span class="token keyword">delete</span>\n\n<span class="token keyword">rollback</span> <span class="token keyword">to</span> a<span class="token punctuation">;</span> <span class="token comment"># 回滚事务</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="视图" tabindex="-1"><a class="header-anchor" href="#视图" aria-hidden="true">#</a> 视图</h2><p>虚拟表，行和列的数据来自于查询中使用的表，在使用中动态生成。只保存sql逻辑，不保存查询结果。</p><h3 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h3><ul><li>多个地方用到同样的查询结果</li><li>查询结果使用的sql语句较复杂</li></ul><h3 id="创建视图" tabindex="-1"><a class="header-anchor" href="#创建视图" aria-hidden="true">#</a> 创建视图</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">view</span> 视图名\n<span class="token keyword">as</span>\n查询语句\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="修改视图" tabindex="-1"><a class="header-anchor" href="#修改视图" aria-hidden="true">#</a> 修改视图</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 创建或替换</span>\n<span class="token keyword">create</span> <span class="token operator">or</span> <span class="token keyword">replace</span> <span class="token keyword">view</span> 视图名\n<span class="token keyword">as</span>\n查询语句\n\n<span class="token keyword">alter</span> <span class="token keyword">view</span> 视图名\n<span class="token keyword">as</span>\n查询语句\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="删除视图" tabindex="-1"><a class="header-anchor" href="#删除视图" aria-hidden="true">#</a> 删除视图</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> 视图名<span class="token number">1</span>，视图名<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><h3 id="系统变量" tabindex="-1"><a class="header-anchor" href="#系统变量" aria-hidden="true">#</a> 系统变量</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 全局变量 global</span>\n<span class="token comment"># 会话变量 session</span>\n<span class="token comment"># 默认 session</span>\n\n<span class="token keyword">show</span> <span class="token keyword">global</span> variables<span class="token punctuation">;</span>\n<span class="token keyword">show</span> <span class="token keyword">global</span> variables <span class="token operator">like</span> <span class="token string">&#39;%char%&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">select</span> @<span class="token variable">@global.</span>系统变量名<span class="token punctuation">;</span>\n<span class="token keyword">set</span> <span class="token keyword">global</span> 系统变量名 <span class="token operator">=</span> 值\n<span class="token keyword">set</span> @<span class="token variable">@global.</span>系统变量名 <span class="token operator">=</span> 值\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>会话变量仅只针对于当前的会话生效</li></ul><h3 id="自定义变量" tabindex="-1"><a class="header-anchor" href="#自定义变量" aria-hidden="true">#</a> 自定义变量</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 用户变量，作用域同会话变量</span>\n<span class="token comment"># 声明和更新</span>\n<span class="token keyword">set</span> @用户变量名<span class="token operator">=</span>值\n<span class="token keyword">set</span> @用户变量名:<span class="token operator">=</span>值\n<span class="token keyword">select</span> @用户变量名:<span class="token operator">=</span>值\n<span class="token keyword">select</span> 字段 <span class="token keyword">into</span> 变量名 <span class="token keyword">from</span> 表\n\n<span class="token comment"># 局部变量，作用域定义它的begin end中</span>\n<span class="token keyword">declare</span> 变量名 类型\n<span class="token keyword">declare</span> 变量名 类型 <span class="token keyword">default</span> 值\n\n<span class="token keyword">set</span> 局部变量名<span class="token operator">=</span>值\n<span class="token keyword">set</span> 局部变量名:<span class="token operator">=</span>值\n<span class="token keyword">select</span> 局部变量名:<span class="token operator">=</span>值\n<span class="token keyword">select</span> 字段 <span class="token keyword">into</span> 变量名 <span class="token keyword">from</span> 表\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="存储过程" tabindex="-1"><a class="header-anchor" href="#存储过程" aria-hidden="true">#</a> 存储过程</h2><p>一组预先编译好的sql语句集合，可以有0个或多个返回值</p><ol><li>提高代码的重复性</li><li>简化操作</li><li>减少编译次数并且减少和数据库服务器的连接次数</li></ol><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 参数模式 参数名 类型</span>\n<span class="token keyword">create</span> <span class="token keyword">procedure</span> 存储过程名（参数列表）\n<span class="token keyword">begin</span>\n  <span class="token keyword">sql</span> 语句\n<span class="token keyword">end</span>\n\n<span class="token comment"># 调用语法</span>\n<span class="token keyword">CALL</span> 存储过程名（传参）\n\n<span class="token comment"># 删除</span>\n<span class="token keyword">drop</span> procedur 存储过程名\n\n<span class="token comment"># 查看</span>\n<span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">procedure</span> 存储过程名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="参数模式" tabindex="-1"><a class="header-anchor" href="#参数模式" aria-hidden="true">#</a> 参数模式</h3><ul><li>IN：可以作为输入，需要调用方传入值</li><li>OUT：可以作为输出，返回值</li><li>INOUT</li></ul><h3 id="结束标记" tabindex="-1"><a class="header-anchor" href="#结束标记" aria-hidden="true">#</a> 结束标记</h3><p>由于sql语句后面都会带有 <code>;</code>，所以整个结构体需要使用其他的结束标记</p><p>使用 <code>delimit $</code> 进行标记配置</p><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h2><p>有且仅有一个返回值</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 参数名 参数类型</span>\n<span class="token keyword">create</span> <span class="token keyword">function</span> 函数名（参数列表）<span class="token keyword">returns</span> 返回类型\n<span class="token keyword">begin</span>\n  函数体\n  <span class="token keyword">return</span> 值\n<span class="token keyword">end</span>\n\n<span class="token comment"># 调用语法</span>\n<span class="token keyword">select</span> 函数名（参数列表）\n\n<span class="token comment"># 查看函数</span>\n<span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">function</span> 函数名\n\n<span class="token comment"># 删除</span>\n<span class="token keyword">drop</span> <span class="token keyword">function</span> 函数名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="流程控制-1" tabindex="-1"><a class="header-anchor" href="#流程控制-1" aria-hidden="true">#</a> 流程控制</h2><h3 id="分支结构" tabindex="-1"><a class="header-anchor" href="#分支结构" aria-hidden="true">#</a> 分支结构</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 如果表达式1成立，返回表达式2的值，否则返回表达式3的值</span>\n<span class="token comment"># 可以应用在任何地方</span>\n<span class="token keyword">IF</span><span class="token punctuation">(</span>表达式<span class="token number">1</span>，表达式<span class="token number">2</span>，表达式<span class="token number">3</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 只能放在begin end中</span>\n<span class="token keyword">if</span> 条件<span class="token number">1</span> <span class="token keyword">then</span> 语句\n<span class="token keyword">elseif</span> 条件<span class="token number">2</span> <span class="token keyword">then</span> 语句<span class="token number">2</span>\n<span class="token keyword">end</span> <span class="token keyword">if</span>\n\n<span class="token comment"># case then 后面是值的时候可以放在任何地方，then后面是语句的时候只能放在begin end中</span>\n<span class="token comment"># 语法1</span>\n<span class="token keyword">case</span> 变量｜表达式｜字段\n<span class="token keyword">when</span> 值<span class="token number">1</span> <span class="token keyword">then</span> 返回值\n<span class="token keyword">when</span> 值<span class="token number">1</span> <span class="token keyword">then</span> 返回值\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token keyword">else</span> 返回值\n<span class="token keyword">end</span> <span class="token keyword">case</span>\n\n<span class="token comment"># 语法2</span>\n<span class="token keyword">case</span>\n<span class="token keyword">when</span> 判断条件 <span class="token keyword">then</span> 返回值\n<span class="token keyword">when</span> 判断条件 <span class="token keyword">then</span> 返回值\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token keyword">else</span> 返回值\n<span class="token keyword">end</span> <span class="token keyword">case</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="循环结构" tabindex="-1"><a class="header-anchor" href="#循环结构" aria-hidden="true">#</a> 循环结构</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment">/*\n  iterate: 类似 continue\n  leave：类似 break\n*/</span>\n\n标签：<span class="token keyword">while</span> 条件 <span class="token keyword">do</span>\n  循环体\n<span class="token keyword">end</span> <span class="token keyword">while</span> 标签\n\n标签：<span class="token keyword">loop</span>\n  循环体\n<span class="token keyword">end</span> <span class="token keyword">loop</span> 标签\n\n标签：<span class="token keyword">repeat</span>\n  循环体\nuntil 结束循环的条件\n<span class="token keyword">end</span> <span class="token keyword">repeat</span> 标签\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>',212),l={},p=(0,a(3744).Z)(l,[["render",function(s,n){return e}]])},3744:(s,n)=>{n.Z=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}},988:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-697f3a24",path:"/technology/BE/MySQL%20%E7%AC%94%E8%AE%B0.html",title:"MySQL",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"MySQL常用命令",slug:"mysql常用命令",children:[]},{level:2,title:"查询类",slug:"查询类",children:[{level:3,title:"基础查询",slug:"基础查询",children:[]},{level:3,title:"条件查询",slug:"条件查询",children:[]},{level:3,title:"排序查询",slug:"排序查询",children:[]},{level:3,title:"常见函数",slug:"常见函数",children:[]},{level:3,title:"多表连接查询",slug:"多表连接查询",children:[]},{level:3,title:"子查询",slug:"子查询",children:[]},{level:3,title:"分页查询",slug:"分页查询",children:[]},{level:3,title:"联合查询",slug:"联合查询",children:[]}]},{level:2,title:"DML语言",slug:"dml语言",children:[{level:3,title:"insert",slug:"insert",children:[]},{level:3,title:"update",slug:"update",children:[]},{level:3,title:"delete",slug:"delete",children:[]}]},{level:2,title:"DDL",slug:"ddl",children:[{level:3,title:"库的管理",slug:"库的管理",children:[]},{level:3,title:"表的管理",slug:"表的管理",children:[]}]},{level:2,title:"数据类型",slug:"数据类型",children:[{level:3,title:"数值型",slug:"数值型",children:[]},{level:3,title:"字符型",slug:"字符型",children:[]},{level:3,title:"日期型",slug:"日期型",children:[]}]},{level:2,title:"常见约束",slug:"常见约束",children:[{level:3,title:"六大约束",slug:"六大约束",children:[]},{level:3,title:"主键和唯一的区别",slug:"主键和唯一的区别",children:[]},{level:3,title:"创建表时添加约束",slug:"创建表时添加约束",children:[]},{level:3,title:"修改表时添加约束",slug:"修改表时添加约束",children:[]},{level:3,title:"修改表时删除约束",slug:"修改表时删除约束",children:[]}]},{level:2,title:"标识列",slug:"标识列",children:[]},{level:2,title:"事务",slug:"事务",children:[{level:3,title:"事务的ACID属性",slug:"事务的acid属性",children:[]},{level:3,title:"事务的创建",slug:"事务的创建",children:[]},{level:3,title:"隔离级别",slug:"隔离级别",children:[]},{level:3,title:"回滚点",slug:"回滚点",children:[]}]},{level:2,title:"视图",slug:"视图",children:[{level:3,title:"应用场景",slug:"应用场景",children:[]},{level:3,title:"创建视图",slug:"创建视图",children:[]},{level:3,title:"修改视图",slug:"修改视图",children:[]},{level:3,title:"删除视图",slug:"删除视图",children:[]}]},{level:2,title:"变量",slug:"变量",children:[{level:3,title:"系统变量",slug:"系统变量",children:[]},{level:3,title:"自定义变量",slug:"自定义变量",children:[]}]},{level:2,title:"存储过程",slug:"存储过程",children:[{level:3,title:"参数模式",slug:"参数模式",children:[]},{level:3,title:"结束标记",slug:"结束标记",children:[]}]},{level:2,title:"函数",slug:"函数",children:[]},{level:2,title:"流程控制",slug:"流程控制-1",children:[{level:3,title:"分支结构",slug:"分支结构",children:[]},{level:3,title:"循环结构",slug:"循环结构",children:[]}]}],filePathRelative:"technology/BE/MySQL 笔记.md",git:{updatedTime:1620472929e3}}}}]);