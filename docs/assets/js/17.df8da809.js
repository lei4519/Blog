(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{388:function(n,i,t){"use strict";t.r(i);var e=t(11),a=Object(e.a)({},(function(){var n=this,i=n.$createElement,t=n._self._c||i;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"css世界中的技巧总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css世界中的技巧总结"}},[n._v("#")]),n._v(" CSS世界中的技巧总结")]),n._v(" "),t("p",[n._v("宽度默认自适应性\nblock元素的宽度默认具有自适应性，即在不设置的情况下具有box-sizing: border-box的特性\nposition后，设置相对方向的值，也可以达到自适应效果\nbox-sizing的设计初衷应该是给替换元素用来自适应父容器宽度使用的，\n利用宽度默认特性，实现box-sizing: border-box\n给需要自适应的元素套一层父元素，给父元素定宽，子元素宽度不设置。此时子元素就默认具有box-sizing: border-box的特性了\nmargin 相关\n如果元素没有定宽，那么可以通过负margin增加尺寸\nmargin实现两端对齐\n三个元素两端对齐，中间留白20px。给子元素正常设置左右margin10px，父元素左右margin-10px即可\nmargin实现等高布局\n给子元素添加padding-bottom：9999px，使子元素的高度无限增高，但是父元素的高度也会被撑高。再使用margin-bottom：-9999px，使父元素的高度回归正常。然后其中一个元素的高度变化就会导致父元素的高度改变，两者的背景色就都展现了\n如果项目不需要兼容ie6、7推荐使用table布局实现等高布局\nborder相关\nborder-color和color\n默认border的颜色就是字体的颜色，所以如果想要边框和字体一起改变，那就直接设置字体颜色即可。默认就不要设置边框颜色。\nborder扩大点击区域\n使用透明边框扩大点击区域，也可以使用padding，但是如果使用的精灵图定位，改变padding会导致定位不准\nborder绘制三角形\n使用边框的宽度，配合透明颜色\nwidth: 0;\nmargin: 20px;\nborder: 10px solid;\nborder-color: transparent transparent transparent skyblue;\nmax/min-height/width 超越 !important\nmax/min 属性会覆盖元素的高度和宽度，这个覆盖比!important的权重还要高\n使用line-height和vertical-align实现多行文字垂直居中和图片垂直居中\n使用line-height控制幽灵空白元素高度，使用vertical-align对齐。如果幽灵空白元素太小，vertical-align则不起作用")]),n._v(" "),t("p",[n._v("父级元素行高和高度一样，子元素设置inline-block，vertical-align: middle; 再将自己的line-height重写为正常高度即可")]),n._v(" "),t("p",[n._v("使用vertical-align实现水平垂直居中弹框\n")]),t("div",{staticClass:"container"},[t("div",{staticClass:"dialog"})]),n._v(" "),t("style",[n._v("\n.container {\nposition: fixed;\ntop: 0;right: 0;left: 0;bottom: 0;\nbackground-color: rgba(0, 0, 0, .4);\nfont-size: 0;\nwhite-space: nowrap;\noverflow: auto;\n&amp;:after {\ncontent: '';\ndisplay: inline-block;\nheight: 100%;\nvertical-align: middle;\n}\n.dialog {\ndisplay: inline-block;\nvertical-align: middle;\ntext-align-last: left;\nfont-size: 14px;\nwhite-space: noraml;\n}\n}\n")]),n._v("\n使用letter-spacing消除换行空白字符\n父元素letter-spacing设为-1em，子元素重置为0即可。letter-spacing负值不会导致inline-block元素重叠。\ntext-align： justify\nie无法使中文两端对齐，可以使用ie私有属性：text-justify:inter-ideograph\njustify想要生效需要两点：1.要有分隔符。 2.要超过一行，非最后一行才会两端对齐，可以使用伪元素来实现最后一行"),t("p")])}),[],!1,null,null,null);i.default=a.exports}}]);