"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[244],{4327:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});const e=(0,a(6252).uE)('<h1 id="vuepress-plugin-flowchart-语法" tabindex="-1"><a class="header-anchor" href="#vuepress-plugin-flowchart-语法" aria-hidden="true">#</a> vuepress-plugin-flowchart 语法</h1><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>@flowstart [vue, ant]\n<span class="token comment">&lt;!-- Your flowchart code here. --&gt;</span>\n@flowend\n\n[Variable]=&gt;start: [Text]\nstart=&gt;start: 开始\n\n[Variable]=&gt;end: [Text]\nend=&gt;end: 结束\n\n[Variable]=&gt;operation: [Text]\noperation=&gt;operation: 操作\n\n[Variable]=&gt;inputoutput: [Text]\ninputoutput=&gt;inputoutput: 输入输出\n\n[Variable]=&gt;subroutine: [Text]\nsubroutine=&gt;subroutine: 子程序\n\n[Variable]=&gt;parallel: [Text]\n[Variable](path1, direction)=&gt;[Position]\n[Variable](path2, direction)=&gt;[Position]\nparallel=&gt;parallel: 并行任务\nparallel(path1)=&gt;process=&gt;e\nparallel(path2)=&gt;e\n\n[Variable]=&gt;condition: [Text]\n<span class="token url">[<span class="token content">Variable</span>](<span class="token url">[yesText]</span>)</span>=&gt;[Position]\n<span class="token url">[<span class="token content">Variable</span>](<span class="token url">[noText]</span>)</span>=&gt;[Position]\ncondition=&gt;condition: 条件\ncondition(yes)=&gt;process=&gt;e\ncondition(no)=&gt;e\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>@flowstart</p><p>start=&gt;start: 开始</p><p>end=&gt;end: 结束</p><p>operation=&gt;operation: 操作</p><p>inputoutput=&gt;inputoutput: 输入输出</p><p>subroutine=&gt;subroutine: 子程序</p><p>parallel=&gt;parallel: 并行任务</p><p>condition=&gt;condition: 条件</p><p>start-&gt;operation-&gt;condition condition(yes)-&gt;inputoutput condition(no)-&gt;subroutine inputoutput-&gt;end subroutine-&gt;end @flowend</p>',11),t={},r=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}},7313:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-3adea006",path:"/notes/VsCode/Vuepress/flowchart.html",title:"vuepress-plugin-flowchart 语法",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"notes/VsCode/Vuepress/flowchart.md",git:{updatedTime:1592231182e3}}}}]);