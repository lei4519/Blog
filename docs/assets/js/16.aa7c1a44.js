(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{393:function(t,s,e){"use strict";e.r(s);var n=e(11),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"electron-进程通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#electron-进程通信"}},[t._v("#")]),t._v(" Electron 进程通信")]),t._v(" "),e("p",[t._v("进程间的通信主要涉及一下四个模块")]),t._v(" "),e("ol",[e("li",[t._v("ipcMain：在主进程中使用，用来接收和回复渲染进程的消息")]),t._v(" "),e("li",[t._v("ipcRenderer：在渲染进程中使用，用来接收和回复主进程、其他渲染进程的消息")]),t._v(" "),e("li",[t._v("webContents：每个渲染进程都拥有一个webContents对象，调用webContents.send可以向此进程发送消息")]),t._v(" "),e("li",[t._v("remote：能够在渲染进程中使用主进程模块")])]),t._v(" "),e("blockquote",[e("p",[t._v("上面这些方法，其实都是node的事件机制，都是EventEmitter的实例。")])]),t._v(" "),e("h2",{attrs:{id:"主进程和渲染进程通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主进程和渲染进程通信"}},[t._v("#")]),t._v(" 主进程和渲染进程通信")]),t._v(" "),e("h3",{attrs:{id:"主进程-主动发送消息至-渲染进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主进程-主动发送消息至-渲染进程"}},[t._v("#")]),t._v(" 主进程 主动发送消息至 渲染进程")]),t._v(" "),e("p",[t._v("使用 "),e("a",{attrs:{href:"https://www.electronjs.org/docs/api/web-contents#contentssendchannel-args",target:"_blank",rel:"noopener noreferrer"}},[t._v("webContents.send"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("主进程发送"),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" BrowserWindow "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" win "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BrowserWindow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("webContents"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eventType'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[t._v("渲染进程接收"),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ipcRenderer "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nipcRenderer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eventType'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("IpcRendererEvent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"渲染进程-主动发送消息至-主进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染进程-主动发送消息至-主进程"}},[t._v("#")]),t._v(" 渲染进程 主动发送消息至 主进程")]),t._v(" "),e("p",[t._v("使用"),e("a",{attrs:{href:"https://www.electronjs.org/docs/api/ipc-renderer#ipcrenderersendchannel-args",target:"_blank",rel:"noopener noreferrer"}},[t._v("ipcRenderer.send"),e("OutboundLink")],1),t._v("发送异步消息")]),t._v(" "),e("p",[t._v("使用"),e("a",{attrs:{href:"https://www.electronjs.org/docs/api/ipc-renderer#ipcrenderersendsyncchannel-args",target:"_blank",rel:"noopener noreferrer"}},[t._v("ipcRenderer.sendSync"),e("OutboundLink")],1),t._v("发送同步消息")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("渲染进程发送")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("ipcRenderer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eventType'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'msg'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("主进程接收")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("ipcMain"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eventType'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("IpcMainEvent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"回复消息的统一方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回复消息的统一方式"}},[t._v("#")]),t._v(" 回复消息的统一方式")]),t._v(" "),e("p",[t._v("上面两个例子的on方法，接受的回调函数都有一个event对象，可以使用这个event对象进行消息回复")]),t._v(" "),e("p",[t._v("先看一下这两个event对象有什么属性")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://www.electronjs.org/docs/api/structures/ipc-main-event",target:"_blank",rel:"noopener noreferrer"}},[t._v("IpcMainEvent"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("frameId: Integer -> 发送消息的渲染进程框架的ID（可能是iframe）")]),t._v(" "),e("li",[t._v("sender: WebContents -> 发送消息的渲染进程的webContents引用，所以我们也可以使用sender.send来回复消息")]),t._v(" "),e("li",[t._v("returnValue: any -> 同步回复消息（赋值）")]),t._v(" "),e("li",[t._v("reply: Function -> 异步回复消息（函数调用）")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://www.electronjs.org/docs/api/structures/ipc-renderer-event",target:"_blank",rel:"noopener noreferrer"}},[t._v("IpcRendererEvent"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("sender: IpcRenderer -> electron.IpcRender的引用")]),t._v(" "),e("li",[t._v("senderId: Integer -> 发送消息的进程 webContents.id，渲染进程的消息触发可能是主进程，也可能是其他渲染进程，可以通过调用 event.sender.sendTo(event.senderId, msg)来回复此信息。从主进程直接发来的信息的 event.senderId是设置为0的。")])])])]),t._v(" "),e("h2",{attrs:{id:"渲染进程之间通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染进程之间通信"}},[t._v("#")]),t._v(" 渲染进程之间通信")]),t._v(" "),e("h3",{attrs:{id:"通过全局属性-实现数据共享"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过全局属性-实现数据共享"}},[t._v("#")]),t._v(" 通过全局属性 实现数据共享")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("主进程中定义全局对象")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("global"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("share "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("渲染进程中通过remote模块控制全局对象")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" share "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" remote"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getGlobal")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'share'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("share"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get")]),t._v("\nshare"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set")]),t._v("\n")])])])])]),t._v(" "),e("blockquote",[e("p",[t._v("只能实现数据共享，并非真正的通信")])]),t._v(" "),e("h3",{attrs:{id:"利用主进程做消息中转"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#利用主进程做消息中转"}},[t._v("#")]),t._v(" 利用主进程做消息中转")]),t._v(" "),e("p",[t._v("这个就不写代码了，就是"),e("code",[t._v("渲染进程A")]),t._v(" 发送消息至 "),e("code",[t._v("主进程")]),t._v(", "),e("code",[t._v("主进程")]),t._v(" 转发消息至 "),e("code",[t._v("渲染进程B")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"通过进程id-直接获取目标进程-进行ipc通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过进程id-直接获取目标进程-进行ipc通信"}},[t._v("#")]),t._v(" 通过进程ID 直接获取目标进程 进行ipc通信")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("如何获取进程ID")]),t._v(" "),e("ul",[e("li",[t._v("通过全局对象共享")]),t._v(" "),e("li",[t._v("主进程通过webContents.send发送消息")])])]),t._v(" "),e("li",[e("p",[t._v("通过ID发送消息")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("ipcRender.sendTo(ID, eventType, msg)")])]),t._v(" "),e("li",[e("code",[t._v("remote.BrowserWindow.fromId(ID).webContents.send(eventType, msg)")])])])])])])}),[],!1,null,null,null);s.default=a.exports}}]);